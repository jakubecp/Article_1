for (i in 1:n) {
cz.lat[i]=dms2deg (as.character (cz.nic.raw[i,5]), sep="DMS")
cz.long[i]=dms2deg (as.character (cz.nic.raw[i,6]), sep="DMS")
}
#RAW data from GBIF (only records with coordinates and you should set up upper limit of them)
n.ant<- occ_search(scientificName = "Nicrophorus antennatus",
hasCoordinate= TRUE, limit = 500)
#coordinates of observations (filter out NAs and obvious mistakes!)
coord <- data.frame (long = n.ant$data$decimalLongitude ,
lat= n.ant$data$decimalLatitude)
antenn = c(1,1,1,1,1,1,1,1,1,1)
coord = data.frame (coord, antenn)
coord.cz = data.frame (long = cz.long, lat = cz.lat, antenn = cz.nic.raw$antennatus)
## bind both dataframes (GBIF + CZ) together
coord.full = rbind (coord, coord.cz)
## created two data frames with presence data and absence data.
coord = data.frame (long = coord.full$long [coord.full$antenn == "1"],
lat = coord.full$lat [coord.full$antenn == "1"])
coord.neg = data.frame (long = coord.full$long [coord.full$antenn == "0"],
lat = coord.full$lat [coord.full$antenn == "0"])
X11()
plot (coord, xlim=c(12,25), ylim=c(40,55))
plot (wrld_simpl, add=T)
setwd ("C:/Users/pavel/Downloads/Vzdelavani/Spatial_modeling/
ENM_2015_Varela/climatic_layers/worldclim/") #notas
setwd ("C:/Users/pavel/Downloads/Vzdelavani/Spatial_modeling/
ENM_2015_Varela/climatic_layers/worldclim/") #notas
setwd ("C:/Users/pavel/Downloads/Vzdelavani/Spatial_modeling/
ENM_2015_Varela/climatic_layers/worldclim/") #notas
setwd ("C:/Users/pavel/Downloads/Vzdelavani/Spatial_modeling/ENM_2015_Varela/climatic_layers/worldclim/") #notas
variable<- stack (c("bio10.bil", "bio18.bil", "bio8.bil", "bio16.bil"))
e<-extent (12,25,40,55)
#crop your climatic maps
variable_crop<- crop (variable, e)
#Project niches of target species by extracting values from raster and ploting them
niche <- extract (variable_crop, coord)
niche <- as.data.frame (niche)
X11()
par (mfrow=c(1,2))
plot (niche$bio18, niche$bio10, xlab= "prectip of warmest qrt"
, ylab= "temp warmest qurt" )
plot (niche$bio16, niche$bio8 , xlab= "precip of wettest qrt" ,
ylab= "temp of wettest qrt" )
maxent_all <- maxent (variable_crop, coord, args=c("maximumbackground=1000",
"betamultiplier=1",
"defaultprevalence=0.5"))
maxent_all@results[5]
maxent_all_predict<- predict (maxent_all, variable_crop)
#Plot the prediction
X11()
plot (maxent_all_predict,
main="Nicrophorus antennatus distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
plot (maxent_all_predict,
main="Nicrophorus antennatus distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
e<-extent (0,40,40,53)
#crop your climatic maps
variable_crop<- crop (variable, e)
#Project niches of target species by extracting values from raster and ploting them
niche <- extract (variable_crop, coord)
niche <- as.data.frame (niche)
X11()
par (mfrow=c(1,2))
plot (niche$bio18, niche$bio10, xlab= "prectip of warmest qrt"
, ylab= "temp warmest qurt" )
plot (niche$bio16, niche$bio8 , xlab= "precip of wettest qrt" ,
ylab= "temp of wettest qrt" )
# MAXENT model (basic setup) - creates values of the model,
# which are used in checking the behavior of the model
# and making predictions (fallowing steps)
maxent_all <- maxent (variable_crop, coord, args=c("maximumbackground=1000",
"betamultiplier=1",
"defaultprevalence=0.5"))
X11()
response (maxent_all)
response (maxent_all)
variable<- stack (c("bio10.bil", "bio8.bil", "bio16.bil", "bio1.bil"))
#optional-if you are interested in more local (and quicker) predictions
#make an object (e) of certain extant (xmin, xmax, ymin, ymax) for croping
e<-extent (0,40,40,53)
#crop your climatic maps
variable_crop<- crop (variable, e)
#Project niches of target species by extracting values from raster and ploting them
niche <- extract (variable_crop, coord)
niche <- as.data.frame (niche)
X11()
par (mfrow=c(1,2))
plot (niche$bio18, niche$bio10, xlab= "prectip of warmest qrt"
, ylab= "temp warmest qurt" )
plot (niche$bio1, niche$bio10, xlab= "prectip of warmest qrt"
, ylab= "temp warmest qurt" )
plot (niche$bio16, niche$bio8 , xlab= "precip of wettest qrt" ,
ylab= "temp of wettest qrt" )
maxent_all <- maxent (variable_crop, coord, args=c("maximumbackground=1000",
"betamultiplier=1",
"defaultprevalence=0.5"))
X11()
response (maxent_all)
maxent_all@results[5]
maxent_all_predict<- predict (maxent_all, variable_crop)
#Plot the prediction
X11()
plot (maxent_all_predict,
main="Nicrophorus antennatus distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
plot (maxent_all_predict,
main="Nicrophorus antennatus distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
fold <- kfold(coord,k=5)
#Create training subdataset of 80% of the data for modeling by selecting
#everything except the number one ((100%/5)*4=80%)
occtrain <- coord[fold !=1,]
#Create testing subdataset of 20% of the data to validate the model by selecting
#only the number one
occtest <- coord [fold==1,]
# MAXENT model (basic setup) for training data
maxent_occtrain <- maxent (variable_crop, occtrain, args=c("maximumbackground=1000",
"betamultiplier=5",
"defaultprevalence=0.5"))
#Prediction for training data
maxent_occtrain_predict <- predict (maxent_occtrain, variable_crop )
#PLotting training subdataset vs. whole dataset
x11()
plot (maxent_all_predict, main="Sciodrepoides watsoni distribution (Maxent/all)")
plot (wrld_simpl, add=TRUE)
plot (maxent_all_predict, main="Sciodrepoides watsoni distribution (Maxent/all)")
plot (wrld_simpl, add=TRUE)
plot (maxent_occtrain_predict, main="Sciodrepoides watsoni distribution (Maxent/training)")
plot (wrld_simpl, add=TRUE)
maxent_occtrain@results[5]
maxent_occtrain@results
#what is dimmension of my data to enter right number of random points
dim(occtest)
evaluate_maxent_occtrain <- evaluate (maxent_all_predict,
p=coord, a=coord.neg,
x=variable_crop)
plot (coord.neg)
plot (wrld_simpl,add=T)
points (occtest, col="red")
x11()
plot (coord.neg)
plot (wrld_simpl,add=T)
points (coord, col="red")
evaluate_maxent_occtrain <- evaluate (maxent_all_predict,
p=coord, a=coord.neg,
x=variable_crop)
evaluate_maxent_occtrain <- evaluate (maxent_occtrain,
p=occtest, a=pseudoabsence,
x=variable_crop)
pseudoabsence <- randomPoints (variable_crop, 650)
evaluate_maxent_occtrain <- evaluate (maxent_occtrain,
p=occtest, a=pseudoabsence,
x=variable_crop)
maxent_occtrain@results[5]
rm(list = ls())
library (rgbif) #nefunguje pod ubuntu
library (raster)
library (maptools)
library (XML) #nefunguje pod ubuntu
library (rgdal) #nefunguje pod ubuntu
library (dismo)
library (sqldf)
library (maps)
library (testthat)
library (adehabitatHS)
library (roxygen2)
library (celestial)
library (ggplot2)
library (rJava)
data(wrld_simpl) #create the World map with borders
setwd ("C:/Users/pavel/Downloads/Dropbox/SGEM_2015/Article_1/") #doma
cz.nic.raw = read.csv ("nicr.czech.csv", header= TRUE, sep=";")
head(cz.nic.raw)
n=length(cz.nic.raw$lat)
cz.lat = c()
cz.long = c()
for (i in 1:n) {
cz.lat[i]=dms2deg (as.character (cz.nic.raw[i,5]), sep="DMS")
cz.long[i]=dms2deg (as.character (cz.nic.raw[i,6]), sep="DMS")
}
n.sep<- occ_search(scientificName = "Nicrophorus sepultor",
hasCoordinate= TRUE, limit = 500)
n.sep
coord <- data.frame (long = n.sep$data$decimalLongitude ,
lat= n.sep$data$decimalLatitude)
sep = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
length (sep)
sep = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
length (sep)
coord = data.frame (coord, sep)
coord.cz = data.frame (long = cz.long, lat = cz.lat, sep = cz.nic.raw$sepultor)
coord.full = rbind (coord, coord.cz)
coord = data.frame (long = coord.full$long [coord.full$sep == "1"],
lat = coord.full$lat [coord.full$sep == "1"])
coord.neg = data.frame (long = coord.full$long [coord.full$sep == "0"],
lat = coord.full$lat [coord.full$sep == "0"])
X11()
plot (coord)
plot (wrld_simpl, add=T)
setwd ("C:/Users/pavel/Downloads/Vzdelavani/Spatial_modeling/ENM_2015_Varela/climatic_layers/worldclim/") #notas
variable<- stack (c("bio10.bil", "bio8.bil", "bio16.bil", "bio1.bil"))
#optional-if you are interested in more local (and quicker) predictions
#make an object (e) of certain extant (xmin, xmax, ymin, ymax) for croping
e<-extent (0,40,40,53)
variable_crop<- crop (variable, e)
#Project niches of target species by extracting values from raster and ploting them
niche <- extract (variable_crop, coord)
niche <- as.data.frame (niche)
X11()
par (mfrow=c(1,2))
plot (niche$bio1, niche$bio10, xlab= "prectip of warmest qrt"
, ylab= "temp warmest qurt" )
plot (niche$bio16, niche$bio8 , xlab= "precip of wettest qrt" ,
ylab= "temp of wettest qrt" )
maxent_all <- maxent (variable_crop, coord, args=c("maximumbackground=1000",
"betamultiplier=1",
"defaultprevalence=0.5"))
X11()
plot (coord)
plot (wrld_simpl, add=T)
X11()
response (maxent_all)
maxent_all@results[5]
maxent_all_predict<- predict (maxent_all, variable_crop)
#Plot the prediction
X11()
plot (maxent_all_predict,
main="Nicrophorus antennatus distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
plot (maxent_all_predict,
main="Nicrophorus antennatus distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
e<-extent (0,40,39,54)
#crop your climatic maps
variable_crop<- crop (variable, e)
maxent_all <- maxent (variable_crop, coord, args=c("maximumbackground=1000",
"betamultiplier=1",
"defaultprevalence=0.5"))
maxent_all@results[5]
maxent_all_predict<- predict (maxent_all, variable_crop)
#Plot the prediction
X11()
plot (maxent_all_predict,
main="Nicrophorus antennatus distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
plot (maxent_all_predict,
main="Nicrophorus antennatus distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
e<-extent (5,45,42,56)
#crop your climatic maps
variable_crop<- crop (variable, e)
maxent_all <- maxent (variable_crop, coord, args=c("maximumbackground=1000",
"betamultiplier=1",
"defaultprevalence=0.5"))
maxent_all@results[5]
maxent_all_predict<- predict (maxent_all, variable_crop)
#Plot the prediction
X11()
plot (maxent_all_predict,
main="Nicrophorus antennatus distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)", xlim =c(-120,40),ylim=c(30,70) )
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)",
xlim =c(-120,40),ylim=c(30,70), axis=FALSE)
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)",
xlim =c(-120,40),ylim=c(30,70))
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70))
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)",
xlim =c(-120,40),ylim=c(30,70), axis=F)
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70), axis=F)
X11()
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)",
xlim =c(-120,40),ylim=c(30,70), axis=F)
plot (wrld_simpl, add=TRUE, xlim=c(-120,40),ylim=c(30,70), axis=F)
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)",
axis=FALSE)
plot (wrld_simpl, add=TRUE, axis=F)
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)",
axis=FALSE)
plot (wrld_simpl, add=TRUE, axis=FALSE)
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)",
axis=FALSE)
plot (wrld_simpl, add=TRUE, axis=FALSE)
X11()
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)",
xlab = NA, ylab=NA)
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)", axes=F)
plot (wrld_simpl, add=TRUE, axes=FALSE)
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)", axes=F)
X11()
plot (maxent_all_predict,
main="Nicrophorus sepultor distribution (Maxent/all)", axes=F)
plot (wrld_simpl, add=TRUE, axes=FALSE)
#EVALUATION OF THE MAXENT MODEL
rm(list = ls())
library (rgbif) #nefunguje pod ubuntu
library (raster)
library (maptools)
library (XML) #nefunguje pod ubuntu
library (rgdal) #nefunguje pod ubuntu
library (dismo)
library (sqldf)
library (maps)
library (testthat)
library (adehabitatHS)
library (roxygen2)
library (celestial)
library (ggplot2)
library (rJava)
data(wrld_simpl) #create the World map with borders
setwd ("C:/Users/pavel/Downloads/Dropbox/SGEM_2015/Article_1/") #doma
cz.nic.raw = read.csv ("nicr.czech.csv", header= TRUE, sep=";")
head(cz.nic.raw)
n=length(cz.nic.raw$lat)
cz.lat = c()
cz.long = c()
for (i in 1:n) {
cz.lat[i]=dms2deg (as.character (cz.nic.raw[i,5]), sep="DMS")
cz.long[i]=dms2deg (as.character (cz.nic.raw[i,6]), sep="DMS")
}
#RAW data from GBIF (only records with coordinates and you should set up upper limit of them)
n.ger<- occ_search(scientificName = "Nicrophorus germanicus",
hasCoordinate= TRUE, limit = 500)
coord <- data.frame (long = n.ger$data$decimalLongitude ,
lat= n.ger$data$decimalLatitude)
coord
ger = c(1,1,1,1,1,1)
length (ger)
coord = data.frame (coord, ger)
coord.cz = data.frame (long = cz.long, lat = cz.lat, ger = cz.nic.raw$germanicus)
coord.cz
coord.full = rbind (coord, coord.cz)
## created two data frames with presence data and absence data.
coord = data.frame (long = coord.full$long [coord.full$sep == "1"],
lat = coord.full$lat [coord.full$sep == "1"])
coord.neg = data.frame (long = coord.full$long [coord.full$sep == "0"],
lat = coord.full$lat [coord.full$sep == "0"])
X11()
plot (coord)
plot (wrld_simpl, add=T)
plot (coord)
coord
coord = data.frame (long = coord.full$long [coord.full$sep == "1"],
lat = coord.full$lat [coord.full$sep == "1"])
coord.neg = data.frame (long = coord.full$long [coord.full$sep == "0"],
lat = coord.full$lat [coord.full$sep == "0"])
coord <- data.frame (long = n.ger$data$decimalLongitude ,
lat= n.ger$data$decimalLatitude)
coord
e
ger = c(1,1,1,1,1,1)
length (ger)
coord = data.frame (coord, ger)
## bind data from previous manipulation (dms to dd) with presence/absence data
coord
coord.cz = data.frame (long = cz.long, lat = cz.lat, ger = cz.nic.raw$germanicus)
coord.cz
coord.full = rbind (coord, coord.cz)
coord = data.frame (long = coord.full$long [coord.full$ger == "1"],
lat = coord.full$lat [coord.full$ger == "1"])
coord.neg = data.frame (long = coord.full$long [coord.full$ger == "0"],
lat = coord.full$lat [coord.full$ger == "0"])
X11()
plot (coord)
plot (wrld_simpl, add=T)
setwd ("C:/Users/pavel/Downloads/Vzdelavani/Spatial_modeling/ENM_2015_Varela/climatic_layers/worldclim/") #notas
variable<- stack (c("bio10.bil", "bio8.bil", "bio16.bil", "bio1.bil"))
e<-extent (5,45,42,56)
#crop your climatic maps
variable_crop<- crop (variable, e)
#Project niches of target species by extracting values from raster and ploting them
niche <- extract (variable_crop, coord)
niche <- as.data.frame (niche)
X11()
par (mfrow=c(1,2))
par (mfrow=c(1,2))
plot (niche$bio1, niche$bio10, xlab= "prectip of warmest qrt"
, ylab= "temp warmest qurt" )
plot (niche$bio16, niche$bio8 , xlab= "precip of wettest qrt" ,
ylab= "temp of wettest qrt" )
maxent_all <- maxent (variable_crop, coord, args=c("maximumbackground=1000",
"betamultiplier=1",
"defaultprevalence=0.5"))
X11()
response (maxent_all)
maxent_all@results[5]
maxent_all_predict<- predict (maxent_all, variable_crop)
X11()
plot (maxent_all_predict,
main="Nicrophorus germanicus distribution (Maxent/all)", axes=F)
plot (wrld_simpl, add=TRUE, axes=FALSE)
plot (maxent_all_predict,
main="Nicrophorus germanicus distribution (Maxent/all)", axes=F)
plot (wrld_simpl, add=TRUE, axes=FALSE)
plot (maxent_all_predict,
main="Nicrophorus germanicus distribution (Maxent/all)", axes=F, legend=F)
plot (wrld_simpl, add=TRUE, axes=FALSE)
n.ger_reclas<- reclassify (maxent_all_predict, c(0,1,1))
plot (n.ger_reclas)
maxent_all@results[5]
maxent_all@results
n.ger_reclas<- reclassify (maxent_all_predict, c(0.5013,1,1))
plot (n.ger_reclas)
x(11)
X11()
plot (n.ger_reclas)
n.ger_reclas<- reclassify (maxent_all_predict, c(0,0.5013,1))
X11()
plot (n.ger_reclas)
n.ger_reclas<- reclassify (maxent_all_predict, c(0,1,0.5013))
X11()
plot (n.ger_reclas)
n.ger_reclas<- reclassify (maxent_all_predict, c(0.5013,1,0))
X11()
plot (n.ger_reclas)
points (nicveo$data$decimalLongitude [nicveo$data$decimalLongitude>0],
n.ger_reclas<- reclassify (maxent_all_predict, c(0.5013,1,1))
X11()
n.ger_reclas<- reclassify (maxent_all_predict, c(0.5013,1,1))
X11()
plot (n.ger_reclas)
plot (wrld_simpl, add=TRUE, axes=FALSE)
n.ger_reclas<- reclassify (maxent_all_predict, c(0.5013,1,1,0.5013,,0))
n.ger_reclas<- reclassify (maxent_all_predict, c(0.5013,1,1,0.5013,0,0))
m = c(0.5013,1,1,0.5013,0,0)
m = c(0.5013,1,1,0.5013,0,0)
rclmat = matrix (m,ncol=3,byrow=TRUE)
n.ger_reclas<- reclassify (maxent_all_predict, rclmat)
m
rclmat = matrix (m,ncol=3,byrow=TRUE)
rclmat
m = c(0.5014,1,1,0.5013,0,0)
rclmat = matrix (m,ncol=3,byrow=TRUE)
n.ger_reclas<- reclassify (maxent_all_predict, rclmat)
m = c(0.5014,1,1,0,0.5013,0)
rclmat = matrix (m,ncol=3,byrow=TRUE)
n.ger_reclas<- reclassify (maxent_all_predict, rclmat)
X11()
plot (n.ger_reclas)
plot (wrld_simpl, add=TRUE, axes=FALSE)
plot (n.ger_reclas)
plot (wrld_simpl, add=TRUE, axes=FALSE)
install.packages ("maps")
library(maps)
map("state", interior = FALSE)
map("state", boundary = FALSE, col="gray", add = TRUE)
map("europe", interior = FALSE)
map("europe", boundary = FALSE, col="gray", add = TRUE)
#EVALUATION OF THE MAXENT MODEL
> library(ggmap)
library(ggmap)
library(mapproj)
install.packages ("ggmap")
install.packages ("mapproj")
library(ggmap)
library(mapproj)
map <- get_map(location = 'Europe', zoom = 4)
ggmap(map)
map <- get_map(location = 'Europe', zoom = 4, maptype = "terrain")
ggmap(map)
map <- get_map(location = 'Europe', zoom = 4, maptype = "terrain-background")
ggmap(map)
map <- get_map(location = 'Europe', zoom = 4, maptype = "satellite")
ggmap(map)
plot (endangered_reclas, add=TRUE, legend=F, axes=F)
endangered_reclas<- reclassify (maxent_all_predict, rclmat)
X11()
ggmap(map)
plot (endangered_reclas, add=TRUE, legend=F, axes=F)
endangered_reclas<- reclassify (maxent_all_predict, rclmat)
X11()
plot (endangered_reclas)
plot (wrld_simpl, add=TRUE, axes=FALSE)
ggmap(map)
plot (endangered_reclas, add=TRUE, legend=F, axes=F)
map("world", interior = FALSE)
map("world", boundary = FALSE, col="gray", add = TRUE)
map("world", interior = FALSE, xlim=c(0,40), ylim=c(40,53))
map("world", boundary = FALSE, col="gray", add = TRUE)
map("world", interior = TRUE, xlim=c(0,40), ylim=c(40,53))
map("world", boundary = FALSE, col="gray", add = TRUE)
map("world", interior = TRUE, xlim=c(0,40), ylim=c(40,53))
plot (endangered_reclas, add=TRUE)
plot (endangered_reclas)
map("world", interior = TRUE, xlim=c(0,40), ylim=c(40,53), add=TRUE)
map("world", interior = TRUE, xlim=c(0,80), ylim=c(20,70), add=TRUE)
plot (endangered_reclas)
map("world", interior = TRUE, xlim=c(0,80), ylim=c(20,70), add=TRUE)
library (rworldmap)
install.packages ("rworldmap")
library (rworldmap)
newmap = getMap(resolution="high")
plot (newmap, xlim=c(0,50), ylim=c(20,50))
plot (newmap, xlim=c(5,45), ylim=c(42,56))
plot (endangered_reclas)
plot (newmap, xlim=c(5,45), ylim=c(42,56), add=T)
plot (endangered_reclas)
plot (newmap, xlim=c(5,45), ylim=c(42,56), add=T)
